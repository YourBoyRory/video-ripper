#!/bin/bash

getFolder() {
    if [[ "$1" == "mp3" ]]; then
        link=$2
        ext="mp3"
        echo "[Rip] mp3 mode"
        download_options="bestaudio"
        args="-x --audio-format mp3"
        stream_options=""
        cd ~/Music/
    else
        link=$1
        ext="mp4"
        download_options="bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best"
        args='--use-postprocessor FFmpegCopyStream --ppa CopyStream:'
        stream_options="-c:v libx264 -c:a aac -f mp4"
        cd ~/Videos/
    fi
}

parseLink() {
    fullDomain=$(\
        echo "$link" |\
        sed -E 's/https?:\/\/([^\/]+).*/\1/'\
    )
    noSubDomain=$(\
        echo "$fullDomain." |\
        awk -F"." -v end="$(($(echo "$fullDomain." | awk -F"." '{print NF}')-1))" '{print $(end-1)"."$end}'\
    )
    local tmp=$(echo "$noSubDomain" | awk -F"." '{print $1}')
    websiteName="${tmp^}"
    if [[ "$websiteName" == "" ]]; then
        websiteName="Generic"
    fi
    echo "[Rip] $websiteName Video"
}

downloadVideo() {
    mkdir ./$websiteName 2>/dev/null
    cd ./$websiteName
    echo "[Rip] Grabbing Title"
    local title=$(yt-dlp "$link" --skip-download --restrict-filenames -o "%(title)s-[%(id)s]" --print filename)
    echo "[Rip] Downloading: $title..."
    yt-dlp $args"$stream_options" -f "$download_options" "$link" --restrict-filenames -o "%(title)s-[%(id)s]"
    testSuccess $? "$title.$ext" "$link"
    exit
}
1
testSuccess() {
    if [[ $1 -eq 0 ]]; then
        nohup nautilus ./$2 2>&1 &
        if [[ $? -ne 0 ]]; then
            xdg-open .
        fi
        echo "[Rip] Done"
    else
        echo -e "[Rip]\e[31m Something went wrong:\e[0m"
        yt-dlp $3 --list-formats
    fi
}

# main
getFolder $1 $2
parseLink
downloadVideo
